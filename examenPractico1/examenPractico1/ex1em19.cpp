//
//  main.cpp
//  examenPractico1
//
//  Created by Layla Tame on 3/13/19.
//  Copyright Â© 2019 Layla Tame. All rights reserved.
//

// Nombre: Layla Tame
// Matricula: A01192934

#include <cstdlib>
#include <iostream>

using namespace std;

//Datos ficticios para las pruebas
#define TAM 51

int kilometros[1579] = {28, 72, 95, 121, 171, 195, 244, 277, 325, 370, 411, 433, 459, 480, 499, 535, 555, 577, 599, 618, 634, 669, 702, 724, 768, 809, 854, 889, 923, 940, 988, 1000, 1035, 1082, 1111, 1125, 1170, 1180, 1211, 1237, 1267, 1290, 1336, 1366, 1378, 1426, 1449, 1477, 1505, 1521, 1554, 1596, 1642, 1664, 1700, 1710, 1735, 1779, 1816, 1842, 1853, 1892, 1912, 1939, 1976, 2023, 2043, 2060, 2093, 2117, 2166, 2176, 2198, 2213, 2226, 2267, 2285, 2310, 2342, 2357, 2405, 2436, 2480, 2511, 2551, 2565, 2611, 2659, 2706, 2729, 2765, 2794, 2824, 2857, 2897, 2921, 2941, 2986, 3036, 3065, 3088, 3126, 3160, 3191, 3229, 3269, 3290, 3327, 3350, 3380, 3426, 3451, 3465, 3511, 3558, 3572, 3606, 3655, 3696, 3714, 3741, 3758, 3785, 3809, 3859, 3882, 3918, 3935, 3981, 4004, 4044, 4071, 4087, 4100, 4117, 4165, 4207, 4248, 4276, 4317, 4339, 4354, 4379, 4426, 4442, 4469, 4498, 4536, 4550, 4578, 4594, 4610, 4638, 4661, 4686, 4708, 4721, 4747, 4778, 4805, 4816, 4829, 4852, 4866, 4910, 4936, 4977, 5015, 5035, 5079, 5099, 5115, 5148, 5191, 5239, 5250, 5276, 5300, 5330, 5367, 5403, 5442, 5484, 5520, 5557, 5604, 5645, 5669, 5717, 5764, 5802, 5844, 5869, 5902, 5927, 5959, 5977, 6013, 6060, 6072, 6116, 6151, 6183, 6225, 6245, 6286, 6317, 6367, 6408, 6444, 6474, 6518, 6560, 6600, 6623, 6641, 6687, 6710, 6745, 6787, 6808, 6852, 6902, 6922, 6972, 7001, 7015, 7042, 7070, 7102, 7139, 7150, 7195, 7223, 7249, 7267, 7288, 7323, 7357, 7392, 7442, 7483, 7494, 7522, 7565, 7576, 7620, 7646, 7679, 7720, 7767, 7783, 7826, 7858, 7879, 7910, 7920, 7958, 8003, 8025, 8069, 8109, 8157, 8182, 8197, 8220, 8255, 8277, 8305, 8320, 8338, 8364, 8397, 8425, 8464, 8486, 8508, 8548, 8596, 8634, 8662, 8701, 8713, 8739, 8758, 8772, 8795, 8837, 8852, 8871, 8896, 8940, 8952, 8982, 9016, 9040, 9086, 9108, 9120, 9132, 9147, 9157, 9191, 9228, 9267, 9281, 9314, 9326, 9347, 9378, 9417, 9436, 9459, 9505, 9540, 9569, 9609, 9641, 9673, 9718, 9742, 9756, 9804, 9821, 9848, 9892, 9934, 9967, 9977, 10024, 10074, 10102, 10144, 10169, 10189, 10215, 10236, 10277, 10323, 10349, 10385, 10420, 10442, 10472, 10515, 10533, 10561, 10576, 10587, 10601, 10638, 10676, 10698, 10744, 10788, 10801, 10842, 10879, 10920, 10962, 10991, 11013, 11060, 11108, 11124, 11138, 11154, 11189, 11228, 11252, 11297, 11333, 11372, 11391, 11436, 11472, 11511, 11533, 11560, 11584, 11622, 11637, 11663, 11713, 11745, 11795, 11844, 11859, 11871, 11919, 11953, 11999, 12045, 12085, 12101, 12146, 12196, 12228, 12241, 12265, 12293, 12331, 12376, 12417, 12448, 12482, 12521, 12563, 12605, 12623, 12665, 12696, 12740, 12772, 12782, 12830, 12858, 12881, 12925, 12960, 12999, 13023, 13069, 13106, 13145, 13182, 13219, 13254, 13265, 13285, 13320, 13340, 13376, 13415, 13428, 13442, 13480, 13511, 13543, 13563, 13590, 13600, 13619, 13629, 13657, 13678, 13715, 13736, 13786, 13817, 13851, 13889, 13928, 13943, 13987, 14011, 14023, 14050, 14071, 14084, 14106, 14139, 14161, 14177, 14189, 14236, 14281, 14294, 14340, 14351, 14388, 14425, 14462, 14484, 14521, 14549, 14585, 14606, 14651, 14682, 14724, 14747, 14772, 14803, 14813, 14859, 14896, 14945, 14982, 15017, 15058, 15107, 15140, 15160, 15186, 15204, 15218, 15253, 15276, 15300, 15313, 15348, 15387, 15426, 15468, 15502, 15519, 15567, 15605, 15615, 15626, 15676, 15699, 15742, 15762, 15772, 15820, 15869, 15891, 15913, 15925, 15949, 15993, 16010, 16031, 16076, 16118, 16149, 16165, 16201, 16223, 16245, 16265, 16286, 16313, 16344, 16382, 16429, 16455, 16471, 16521, 16539, 16565, 16584, 16618, 16638, 16668, 16709, 16730, 16767, 16791, 16838, 16854, 16885, 16928, 16955, 16995, 17018, 17040, 17058, 17097, 17145, 17155, 17191, 17208, 17220, 17237, 17261, 17290, 17331, 17371, 17405, 17417, 17440, 17468, 17513, 17552, 17582, 17599, 17610, 17628, 17675, 17711, 17747, 17780, 17809, 17823, 17842, 17875, 17905, 17944, 17993, 18038, 18072, 18103, 18152, 18187, 18207, 18235, 18249, 18294, 18306, 18333, 18343, 18360, 18399, 18416, 18465, 18490, 18534, 18549, 18585, 18631, 18651, 18661, 18700, 18743, 18770, 18786, 18814, 18838, 18884, 18916, 18931, 18963, 18986, 18999, 19029, 19050, 19060, 19108, 19130, 19143, 19157, 19179, 19209, 19255, 19302, 19320, 19366, 19411, 19440, 19479, 19513, 19558, 19594, 19614, 19663, 19710, 19743, 19771, 19788, 19822, 19841, 19872, 19892, 19936, 19957, 19976, 20000, 20027, 20064, 20099, 20146, 20188, 20203, 20235, 20279, 20292, 20340, 20368, 20397, 20436, 20481, 20511, 20540, 20585, 20627, 20667, 20710, 20723, 20750, 20788, 20803, 20815, 20828, 20863, 20885, 20932, 20975, 21001, 21023, 21038, 21076, 21104, 21137, 21172, 21206, 21239, 21285, 21312, 21333, 21353, 21379, 21391, 21419, 21447, 21459, 21492, 21529, 21545, 21593, 21624, 21654, 21702, 21752, 21786, 21804, 21824, 21860, 21909, 21946, 21977, 22003, 22036, 22049, 22077, 22100, 22134, 22170, 22196, 22242, 22277, 22291, 22314, 22343, 22369, 22401, 22440, 22453, 22466, 22506, 22528, 22573, 22588, 22630, 22665, 22700, 22742, 22772, 22795, 22845, 22864, 22898, 22944, 22958, 22985, 23015, 23038, 23067, 23106, 23147, 23161, 23180, 23198, 23229, 23267, 23298, 23322, 23344, 23367, 23409, 23421, 23441, 23471, 23519, 23548, 23561, 23595, 23634, 23681, 23724, 23755, 23770, 23801, 23841, 23860, 23871, 23894, 23924, 23953, 23991, 24041, 24064, 24103, 24128, 24161, 24182, 24229, 24268, 24318, 24364, 24406, 24433, 24463, 24475, 24505, 24531, 24567, 24602, 24643, 24683, 24699, 24748, 24775, 24786, 24823, 24835, 24879, 24906, 24935, 24954, 24998, 25008, 25020, 25037, 25063, 25087, 25108, 25123, 25173, 25204, 25245, 25267, 25285, 25310, 25357, 25379, 25408, 25420, 25452, 25469, 25509, 25521, 25560, 25590, 25621, 25652, 25662, 25707, 25735, 25760, 25800, 25823, 25833, 25876, 25912, 25961, 26009, 26059, 26079, 26112, 26129, 26142, 26184, 26206, 26244, 26257, 26269, 26284, 26314, 26346, 26391, 26425, 26471, 26481, 26530, 26557, 26591, 26632, 26675, 26709, 26750, 26769, 26798, 26828, 26857, 26868, 26917, 26931, 26943, 26962, 26976, 27004, 27040, 27058, 27106, 27124, 27167, 27177, 27207, 27245, 27278, 27291, 27341, 27369, 27409, 27432, 27457, 27505, 27526, 27566, 27586, 27629, 27642, 27656, 27688, 27708, 27734, 27773, 27784, 27826, 27857, 27871, 27913, 27925, 27969, 28016, 28065, 28099, 28147, 28193, 28240, 28286, 28310, 28348, 28369, 28411, 28444, 28489, 28501, 28541, 28552, 28600, 28616, 28639, 28657, 28671, 28719, 28757, 28788, 28830, 28870, 28887, 28920, 28947, 28960, 28995, 29039, 29054, 29094, 29105, 29137, 29155, 29201, 29212, 29230, 29248, 29292, 29325, 29369, 29387, 29426, 29461, 29501, 29527, 29568, 29580, 29605, 29618, 29646, 29677, 29711, 29736, 29771, 29791, 29838, 29880, 29892, 29936, 29980, 30000, 30041, 30052, 30077, 30115, 30157, 30207, 30253, 30277, 30320, 30351, 30394, 30441, 30489, 30532, 30569, 30607, 30627, 30651, 30681, 30718, 30731, 30772, 30786, 30815, 30836, 30847, 30869, 30910, 30952, 30998, 31041, 31055, 31085, 31131, 31170, 31217, 31250, 31276, 31287, 31321, 31370, 31391, 31420, 31457, 31504, 31537, 31561, 31572, 31615, 31657, 31675, 31701, 31717, 31747, 31774, 31798, 31832, 31876, 31900, 31937, 31965, 31998, 32013, 32048, 32062, 32081, 32112, 32146, 32163, 32179, 32197, 32246, 32285, 32320, 32344, 32382, 32426, 32470, 32487, 32509, 32558, 32606, 32619, 32660, 32681, 32705, 32746, 32784, 32825, 32839, 32881, 32892, 32906, 32941, 32955, 32988, 33038, 33060, 33105, 33120, 33139, 33179, 33212, 33234, 33277, 33327, 33356, 33392, 33430, 33450, 33460, 33471, 33521, 33554, 33575, 33594, 33638, 33666, 33701, 33748, 33778, 33803, 33820, 33855, 33884, 33910, 33953, 34002, 34015, 34028, 34068, 34108, 34139, 34173, 34211, 34239, 34254, 34275, 34296, 34307, 34353, 34388, 34418, 34456, 34470, 34495, 34543, 34575, 34616, 34653, 34672, 34722, 34736, 34773, 34815, 34834, 34881, 34899, 34925, 34954, 34995, 35040, 35072, 35104, 35127, 35167, 35180, 35215, 35247, 35275, 35303, 35317, 35361, 35381, 35431, 35481, 35526, 35563, 35590, 35601, 35633, 35663, 35686, 35712, 35734, 35772, 35792, 35802, 35846, 35861, 35911, 35921, 35941, 35962, 35984, 36026, 36045, 36081, 36097, 36132, 36147, 36189, 36227, 36273, 36307, 36346, 36388, 36432, 36463, 36497, 36508, 36542, 36571, 36605, 36631, 36650, 36663, 36679, 36699, 36725, 36755, 36788, 36819, 36855, 36895, 36919, 36961, 36974, 37012, 37046, 37063, 37107, 37143, 37154, 37184, 37203, 37234, 37262, 37274, 37310, 37349, 37370, 37415, 37429, 37471, 37520, 37538, 37571, 37588, 37622, 37636, 37667, 37706, 37755, 37805, 37816, 37854, 37898, 37946, 37994, 38010, 38043, 38064, 38074, 38117, 38149, 38198, 38222, 38271, 38309, 38355, 38394, 38429, 38459, 38487, 38525, 38538, 38573, 38604, 38638, 38657, 38695, 38710, 38754, 38773, 38784, 38825, 38873, 38888, 38920, 38962, 38996, 39021, 39064, 39079, 39111, 39146, 39187, 39235, 39246, 39261, 39306, 39323, 39342, 39356, 39405, 39448, 39458, 39487, 39516, 39531, 39564, 39589, 39609, 39626, 39644, 39688, 39708, 39726, 39738, 39763, 39783, 39821, 39855, 39902, 39943, 39963, 40001, 40040, 40064, 40106, 40128, 40148, 40191, 40235, 40271, 40311, 40327, 40362, 40406, 40424, 40460, 40480, 40515, 40563, 40607, 40641, 40685, 40711, 40747, 40795, 40805, 40848, 40898, 40929, 40953, 40999, 41016, 41036, 41052, 41099, 41149, 41185, 41214, 41246, 41294, 41339, 41388, 41429, 41450, 41479, 41509, 41530, 41558, 41588, 41610, 41629, 41660, 41690, 41713, 41750, 41795, 41839, 41851, 41899, 41928, 41964, 41996, 42017, 42047, 42090, 42128, 42152, 42165, 42210, 42224, 42255, 42280, 42326, 42374, 42416, 42430, 42479, 42521, 42544, 42564, 42590, 42623, 42672, 42718, 42754, 42767, 42782, 42828, 42871, 42908, 42950, 42970, 43018, 43040, 43077, 43105, 43125, 43137, 43159, 43195, 43229, 43259, 43304, 43330, 43380, 43408, 43433, 43472, 43491, 43503, 43523, 43572, 43585, 43607, 43644, 43674, 43705, 43753, 43793, 43837, 43849, 43867, 43881, 43891, 43920, 43960, 43993, 44016, 44044, 44072, 44108, 44148, 44193, 44231, 44275, 44295, 44322, 44334, 44367, 44392, 44420, 44434, 44470, 44485, 44517, 44559, 44576, 44610, 44645, 44683, 44732, 44742, 44781, 44828, 44859, 44899, 44924, 44934, 44969, 45011, 45036, 45047, 45068, 45115, 45163, 45180, 45202, 45218, 45252, 45291, 45316, 45335, 45375, 45419, 45432, 45457, 45488, 45525, 45566, 45585, 45599, 45620, 45658, 45701, 45719, 45760, 45802, 45839, 45849, 45878, 45924, 45951, 45984, 46015, 46060, 46104, 46133, 46150, 46177, 46225, 46252, 46267, 46279, 46326, 46351, 46362, 46390, 46405, 46436, 46454, 46476, 46523, 46570, 46594, 46605, 46621, 46647, 46666, 46678, 46713, 46732, 46758, 46782, 46807, 46853, 46864, 46883, 46931, 46980, 47028, 47042, 47088, 47098, 47121, 47148, 47192, 47215, 47252, 47276, 47304, 47343, 47361, 47374, 47413, 47461, 47489, 47513, 47538, 47574, 47606, 47630, 47649, 47691, 47741, 47762, 47812, 47836, 47854, 47895, 47931, 47977};

int costos[TAM][TAM] = {
    {0, 99999, 270, 99999, 99999, 99999, 99999, 99999, 99999, 99999, 99999, 99999, 75, 66, 63, 60, 99999, 660, 99999, 99999, 585, 99999, 615, 99999, 99999, 99999, 99999, 64, 99999, 99999, 99999, 99999, 99999, 540, 99999, 70, 99999, 195, 66, 99999, 105, 72, 51, 99999, 99999, 99999, 165, 510, 99999, 75, 645},
    { 99999, 0, 72, 390, 99999, 99999, 585, 99999, 99999, 99999, 99999, 56, 99999, 195, 99999, 99999, 99999, 99999, 525, 99999, 72, 99999, 495, 99999, 77, 99999, 99999, 99999, 99999, 390, 80, 99999, 435, 45, 99999, 64, 99999, 390, 99999, 99999, 420, 99999, 66, 570, 165, 99999, 99999, 67, 99999, 195, 30},
    { 270, 72, 0, 99999, 405, 99999, 480, 99999, 99999, 720, 99999, 99999, 180, 99999, 99999, 79, 99999, 53, 585, 255, 675, 630, 99999, 99999, 330, 60, 99999, 720, 210, 99999, 540, 99999, 99999, 74, 330, 99999, 99999, 645, 345, 99999, 195, 585, 99999, 99999, 99999, 99999, 375, 79, 99999, 675, 99999},
    { 99999, 390, 99999, 0, 99999, 390, 99999, 735, 99999, 465, 90, 99999, 74, 225, 210, 99999, 99999, 99999, 51, 495, 45, 150, 99999, 74, 99999, 75, 150, 15, 99999, 99999, 99999, 705, 99999, 465, 210, 99999, 99999, 99999, 99999, 99999, 555, 99999, 99999, 99999, 99999, 240, 51, 74, 99999, 77, 99999},
    { 99999, 99999, 405, 99999, 0, 99999, 525, 510, 99999, 345, 70, 74, 99999, 99999, 99999, 99999, 525, 60, 645, 99999, 99999, 57, 195, 720, 99999, 68, 99999, 660, 90, 99999, 90, 99999, 99999, 99999, 99999, 61, 315, 99999, 99999, 99999, 66, 99999, 99999, 99999, 105, 99999, 99999, 64, 99999, 99999, 52},
    { 99999, 99999, 99999, 390, 99999, 0, 99999, 99999, 555, 45, 99999, 99999, 99999, 99999, 60, 99999, 165, 99999, 75, 99999, 99999, 45, 99999, 99999, 99999, 69, 99999, 99999, 99999, 71, 420, 99999, 720, 99999, 99999, 165, 645, 99999, 99999, 99999, 99999, 390, 99999, 99999, 99999, 61, 99999, 99999, 90, 67, 735},
    { 99999, 585, 480, 99999, 525, 99999, 0, 99999, 99999, 675, 60, 99999, 570, 525, 99999, 615, 67, 99999, 120, 99999, 71, 420, 540, 99999, 315, 75, 99999, 53, 60, 99999, 77, 99999, 99999, 735, 690, 80, 99999, 375, 99999, 99999, 70, 99999, 615, 705, 99999, 72, 99999, 315, 99999, 99999, 99999},
    { 99999, 99999, 99999, 735, 510, 99999, 99999, 0, 60, 99999, 390, 99999, 330, 99999, 99999, 99999, 450, 99999, 99999, 615, 99999, 660, 50, 99999, 73, 600, 99999, 705, 99999, 99999, 65, 99999, 525, 99999, 99999, 99999, 65, 99999, 135, 165, 51, 52, 75, 99999, 675, 55, 30, 65, 60, 99999, 495},
    { 99999, 99999, 99999, 99999, 99999, 555, 99999, 60, 0, 99999, 99999, 99999, 240, 75, 63, 63, 99999, 99999, 270, 99999, 99999, 570, 99999, 240, 99999, 50, 99999, 79, 99999, 675, 99999, 300, 99999, 99999, 99999, 70, 420, 99999, 705, 135, 390, 105, 375, 99999, 315, 99999, 99999, 76, 99999, 99999, 99999},
    { 99999, 99999, 720, 465, 345, 45, 675, 99999, 99999, 0, 99999, 56, 64, 99999, 165, 99999, 405, 99999, 99999, 99999, 61, 99999, 105, 120, 99999, 99999, 99999, 90, 99999, 99999, 540, 615, 99999, 225, 57, 99999, 99999, 375, 99999, 99999, 135, 59, 405, 705, 99999, 135, 45, 70, 99999, 99999, 330},
    { 99999, 99999, 99999, 90, 70, 99999, 60, 390, 99999, 99999, 0, 99999, 480, 675, 99999, 60, 99999, 99999, 570, 99999, 99999, 99999, 99999, 180, 50, 99999, 675, 165, 99999, 99999, 99999, 99999, 99999, 555, 99999, 60, 99999, 285, 285, 77, 99999, 77, 99999, 62, 99999, 99999, 99999, 99999, 75, 165, 99999},
    { 99999, 56, 99999, 99999, 74, 99999, 99999, 99999, 99999, 56, 99999, 0, 61, 99999, 99999, 99999, 99999, 75, 99999, 99999, 99999, 99999, 99999, 405, 99999, 99999, 150, 390, 630, 99999, 52, 600, 75, 435, 99999, 99999, 99999, 99999, 99999, 99999, 435, 99999, 645, 79, 99999, 99999, 99999, 99999, 99999, 99999, 99999},
    { 75, 99999, 180, 74, 99999, 99999, 570, 330, 240, 64, 480, 61, 0, 345, 99999, 68, 68, 70, 99999, 99999, 99999, 99999, 61, 68, 99999, 690, 99999, 63, 99999, 99999, 99999, 99999, 285, 63, 210, 99999, 75, 99999, 360, 99999, 99999, 99999, 57, 60, 68, 420, 99999, 99999, 60, 55, 99999},
    { 66, 195, 99999, 225, 99999, 99999, 525, 99999, 75, 99999, 675, 99999, 345, 0, 73, 50, 99999, 99999, 59, 79, 240, 99999, 660, 300, 495, 99999, 99999, 135, 99999, 495, 99999, 585, 180, 62, 99999, 690, 99999, 99999, 225, 99999, 58, 99999, 68, 99999, 405, 99999, 99999, 99999, 99999, 99999, 225},
    { 63, 99999, 99999, 210, 99999, 60, 99999, 99999, 63, 165, 99999, 99999, 99999, 73, 0, 705, 56, 72, 54, 99999, 405, 99999, 99999, 450, 99999, 99999, 68, 70, 68, 150, 99999, 135, 99999, 99999, 660, 62, 90, 600, 99999, 735, 99999, 465, 58, 180, 99999, 645, 99999, 99999, 71, 99999, 99999},
    { 60, 99999, 79, 99999, 99999, 99999, 615, 99999, 63, 99999, 60, 99999, 68, 50, 705, 0, 99999, 58, 99999, 99999, 99999, 69, 99999, 99999, 465, 99999, 56, 63, 51, 80, 74, 71, 51, 99999, 90, 30, 68, 690, 90, 99999, 99999, 600, 99999, 99999, 62, 630, 705, 99999, 99999, 56, 99999},
    { 99999, 99999, 99999, 99999, 525, 165, 67, 450, 99999, 405, 99999, 99999, 68, 99999, 56, 99999, 0, 270, 99999, 99999, 99999, 255, 99999, 99999, 99999, 450, 99999, 285, 99999, 99999, 99999, 99999, 99999, 99999, 99999, 99999, 99999, 75, 99999, 68, 99999, 99999, 99999, 99999, 99999, 150, 99999, 70, 99999, 330, 64},
    { 660, 99999, 53, 99999, 60, 99999, 99999, 99999, 99999, 99999, 99999, 75, 70, 99999, 72, 58, 270, 0, 99999, 195, 99999, 99999, 99999, 99999, 99999, 99999, 255, 45, 99999, 99999, 15, 99999, 99999, 285, 60, 675, 77, 52, 99999, 99999, 645, 135, 99999, 285, 555, 99999, 99999, 480, 720, 66, 99999},
    { 99999, 525, 585, 51, 645, 75, 120, 99999, 270, 99999, 570, 99999, 99999, 59, 54, 99999, 99999, 99999, 0, 99999, 99999, 99999, 64, 78, 99999, 64, 99999, 99999, 99999, 60, 60, 78, 60, 63, 99999, 99999, 50, 99999, 99999, 99999, 99999, 99999, 99999, 99999, 99999, 99999, 225, 120, 99999, 77, 345},
    { 99999, 99999, 255, 495, 99999, 99999, 99999, 615, 99999, 99999, 99999, 99999, 99999, 79, 99999, 99999, 99999, 195, 99999, 0, 99999, 570, 255, 99999, 99999, 71, 99999, 99999, 555, 99999, 615, 52, 99999, 150, 99999, 55, 78, 99999, 99999, 300, 99999, 150, 99999, 99999, 99999, 99999, 76, 120, 74, 99999, 77},
    { 585, 72, 675, 45, 99999, 99999, 71, 99999, 99999, 61, 99999, 99999, 99999, 240, 405, 99999, 99999, 99999, 99999, 99999, 0, 99999, 69, 270, 99999, 99999, 15, 53, 99999, 99999, 75, 99999, 495, 99999, 99999, 99999, 99999, 720, 450, 645, 45, 99999, 51, 99999, 55, 51, 480, 55, 99999, 720, 99999},
    { 99999, 99999, 630, 150, 57, 45, 420, 660, 570, 99999, 99999, 99999, 99999, 99999, 99999, 69, 255, 99999, 99999, 570, 99999, 0, 99999, 99999, 99999, 68, 65, 465, 73, 99999, 99999, 69, 99999, 99999, 57, 99999, 99999, 225, 99999, 63, 99999, 99999, 99999, 135, 99999, 135, 99999, 270, 99999, 285, 99999},
    { 615, 495, 99999, 99999, 195, 99999, 540, 50, 99999, 105, 99999, 99999, 61, 660, 99999, 99999, 99999, 99999, 64, 255, 69, 99999, 0, 660, 99999, 99999, 51, 99999, 67, 80, 75, 99999, 225, 65, 720, 73, 99999, 99999, 59, 50, 195, 99999, 99999, 99999, 99999, 450, 120, 79, 525, 99999, 99999},
    { 99999, 99999, 99999, 74, 720, 99999, 99999, 99999, 240, 120, 180, 405, 68, 300, 450, 99999, 99999, 99999, 78, 99999, 270, 99999, 660, 0, 99999, 15, 450, 99999, 525, 99999, 645, 450, 70, 15, 99999, 99999, 165, 99999, 99999, 99999, 73, 70, 600, 195, 99999, 75, 435, 165, 240, 99999, 99999},
    { 99999, 77, 330, 99999, 99999, 99999, 315, 73, 99999, 99999, 50, 99999, 99999, 495, 99999, 465, 99999, 99999, 99999, 99999, 99999, 99999, 99999, 99999, 0, 735, 720, 240, 99999, 99999, 50, 99999, 330, 71, 30, 99999, 285, 315, 99999, 585, 99999, 630, 99999, 195, 99999, 450, 675, 99999, 99999, 255, 99999},
    { 99999, 99999, 60, 75, 68, 69, 75, 600, 50, 99999, 99999, 99999, 690, 99999, 99999, 99999, 450, 99999, 64, 71, 99999, 68, 99999, 15, 735, 0, 99999, 99999, 540, 435, 99999, 99999, 71, 99999, 53, 690, 99999, 60, 585, 465, 525, 99999, 99999, 99999, 375, 99999, 69, 99999, 285, 270, 525},
    { 99999, 99999, 99999, 150, 99999, 99999, 99999, 99999, 99999, 99999, 675, 150, 99999, 99999, 68, 56, 99999, 255, 99999, 99999, 15, 65, 51, 450, 720, 99999, 0, 540, 61, 63, 99999, 99999, 99999, 99999, 69, 180, 99999, 99999, 99999, 615, 99999, 99999, 73, 57, 70, 15, 99999, 180, 99999, 99999, 90},
    { 64, 99999, 720, 15, 660, 99999, 53, 705, 79, 90, 165, 390, 63, 135, 70, 63, 285, 45, 99999, 99999, 53, 465, 99999, 99999, 240, 99999, 540, 0, 99999, 645, 99999, 99999, 99999, 99999, 61, 99999, 67, 99999, 61, 390, 465, 390, 165, 99999, 99999, 450, 150, 99999, 525, 99999, 70},
    { 99999, 99999, 210, 99999, 90, 99999, 60, 99999, 99999, 99999, 99999, 630, 99999, 99999, 68, 51, 99999, 99999, 99999, 555, 99999, 73, 67, 525, 99999, 540, 61, 99999, 0, 99999, 75, 99999, 57, 525, 51, 270, 99999, 99999, 630, 99999, 99999, 195, 30, 99999, 450, 135, 210, 99999, 90, 15, 510},
    { 99999, 390, 99999, 99999, 99999, 71, 99999, 99999, 675, 99999, 99999, 99999, 99999, 495, 150, 80, 99999, 99999, 60, 99999, 99999, 99999, 80, 99999, 99999, 435, 63, 645, 99999, 0, 99999, 99999, 99999, 75, 99999, 61, 68, 99999, 99999, 99999, 53, 375, 210, 70, 435, 630, 600, 99999, 99999, 99999, 675},
    { 99999, 80, 540, 99999, 90, 420, 77, 65, 99999, 540, 99999, 52, 99999, 99999, 99999, 74, 99999, 15, 60, 615, 75, 99999, 75, 645, 50, 99999, 99999, 99999, 75, 99999, 0, 53, 99999, 615, 70, 585, 300, 525, 99999, 99999, 120, 60, 99999, 99999, 51, 65, 99999, 99999, 99999, 99999, 99999},
    { 99999, 99999, 99999, 705, 99999, 99999, 99999, 99999, 300, 615, 99999, 600, 99999, 585, 135, 71, 99999, 99999, 78, 52, 99999, 69, 99999, 450, 99999, 99999, 99999, 99999, 99999, 99999, 53, 0, 225, 105, 99999, 375, 480, 99999, 68, 99999, 99999, 99999, 690, 99999, 99999, 99999, 99999, 99999, 99999, 99999, 70},
    { 99999, 435, 99999, 99999, 99999, 720, 99999, 525, 99999, 99999, 99999, 75, 285, 180, 99999, 51, 99999, 99999, 60, 99999, 495, 99999, 225, 70, 330, 71, 99999, 99999, 57, 99999, 99999, 225, 0, 99999, 99999, 99999, 510, 55, 99999, 57, 99999, 90, 99999, 735, 555, 99999, 99999, 99999, 435, 360, 69},
    { 540, 45, 74, 465, 99999, 99999, 735, 99999, 99999, 225, 555, 435, 63, 62, 99999, 99999, 99999, 285, 63, 150, 99999, 99999, 65, 15, 71, 99999, 99999, 99999, 525, 75, 615, 105, 99999, 0, 630, 99999, 99999, 60, 99999, 99999, 525, 99999, 195, 99999, 240, 99999, 99999, 165, 59, 99999, 270},
    { 99999, 99999, 330, 210, 99999, 99999, 690, 99999, 99999, 57, 99999, 99999, 210, 99999, 660, 90, 99999, 60, 99999, 99999, 99999, 57, 720, 99999, 30, 53, 69, 61, 51, 99999, 70, 99999, 99999, 630, 0, 56, 99999, 210, 225, 735, 510, 15, 165, 67, 480, 59, 90, 99999, 120, 510, 51},
    { 70, 64, 99999, 99999, 61, 165, 80, 99999, 70, 99999, 60, 99999, 99999, 690, 62, 30, 99999, 675, 99999, 55, 99999, 99999, 73, 99999, 99999, 690, 180, 99999, 270, 61, 585, 375, 99999, 99999, 56, 0, 99999, 99999, 99999, 99999, 75, 360, 675, 99999, 360, 300, 99999, 99999, 15, 99999, 99999},
    { 99999, 99999, 99999, 99999, 315, 645, 99999, 65, 420, 99999, 99999, 99999, 75, 99999, 90, 68, 99999, 77, 50, 78, 99999, 99999, 99999, 165, 285, 99999, 99999, 67, 99999, 68, 300, 480, 510, 99999, 99999, 99999, 0, 735, 630, 690, 99999, 390, 360, 420, 99999, 99999, 99999, 80, 69, 720, 600},
    { 195, 390, 645, 99999, 99999, 99999, 375, 99999, 99999, 375, 285, 99999, 99999, 99999, 600, 690, 75, 52, 99999, 99999, 720, 225, 99999, 99999, 315, 60, 99999, 99999, 99999, 99999, 525, 99999, 55, 60, 210, 99999, 735, 0, 99999, 75, 75, 99999, 55, 690, 690, 99999, 75, 99999, 99999, 570, 570},
    { 66, 99999, 345, 99999, 99999, 99999, 99999, 135, 705, 99999, 285, 99999, 360, 225, 99999, 90, 99999, 99999, 99999, 99999, 450, 99999, 59, 99999, 99999, 585, 99999, 61, 630, 99999, 99999, 68, 99999, 99999, 225, 99999, 630, 99999, 0, 51, 630, 270, 76, 99999, 59, 99999, 71, 405, 52, 99999, 99999},
    { 99999, 99999, 99999, 99999, 99999, 99999, 99999, 165, 135, 99999, 77, 99999, 99999, 99999, 735, 99999, 68, 99999, 99999, 300, 645, 63, 50, 99999, 585, 465, 615, 390, 99999, 99999, 99999, 99999, 57, 99999, 735, 99999, 690, 75, 51, 0, 615, 690, 99999, 180, 99999, 99999, 75, 77, 390, 555, 52},
    { 105, 420, 195, 555, 66, 99999, 70, 51, 390, 135, 99999, 435, 99999, 58, 99999, 99999, 99999, 645, 99999, 99999, 45, 99999, 195, 73, 99999, 525, 99999, 465, 99999, 53, 120, 99999, 99999, 525, 510, 75, 99999, 75, 630, 615, 0, 30, 660, 180, 120, 285, 99999, 79, 99999, 99999, 570},
    { 72, 99999, 585, 99999, 99999, 390, 99999, 52, 105, 59, 77, 99999, 99999, 99999, 465, 600, 99999, 135, 99999, 150, 99999, 99999, 99999, 70, 630, 99999, 99999, 390, 195, 375, 60, 99999, 90, 99999, 15, 360, 390, 99999, 270, 690, 30, 0, 53, 99999, 99999, 99999, 705, 315, 99999, 555, 480},
    { 51, 66, 99999, 99999, 99999, 99999, 615, 75, 375, 405, 99999, 645, 57, 68, 58, 99999, 99999, 99999, 99999, 99999, 51, 99999, 99999, 600, 99999, 99999, 73, 165, 30, 210, 99999, 690, 99999, 195, 165, 675, 360, 55, 76, 99999, 660, 53, 0, 99999, 570, 99999, 99999, 615, 99999, 99999, 345},
    { 99999, 570, 99999, 99999, 99999, 99999, 705, 99999, 99999, 705, 62, 79, 60, 99999, 180, 99999, 99999, 285, 99999, 99999, 99999, 135, 99999, 195, 195, 99999, 57, 99999, 99999, 70, 99999, 99999, 735, 99999, 67, 99999, 420, 690, 99999, 180, 180, 99999, 99999, 0, 58, 99999, 61, 65, 99999, 615, 99999},
    { 99999, 165, 99999, 99999, 105, 99999, 99999, 675, 315, 99999, 99999, 99999, 68, 405, 99999, 62, 99999, 555, 99999, 99999, 55, 99999, 99999, 99999, 99999, 375, 70, 99999, 450, 435, 51, 99999, 555, 240, 480, 360, 99999, 690, 59, 99999, 120, 99999, 570, 58, 0, 99999, 60, 210, 270, 52, 99999},
    { 99999, 99999, 99999, 240, 99999, 61, 72, 55, 99999, 135, 99999, 99999, 420, 99999, 645, 630, 150, 99999, 99999, 99999, 51, 135, 450, 75, 450, 99999, 15, 450, 135, 630, 65, 99999, 99999, 99999, 59, 300, 99999, 99999, 99999, 99999, 285, 99999, 99999, 99999, 99999, 0, 120, 61, 510, 99999, 99999},
    { 165, 99999, 375, 51, 99999, 99999, 99999, 30, 99999, 45, 99999, 99999, 99999, 99999, 99999, 705, 99999, 99999, 225, 76, 480, 99999, 120, 435, 675, 69, 99999, 150, 210, 600, 99999, 99999, 99999, 99999, 90, 99999, 99999, 75, 71, 75, 99999, 705, 99999, 61, 60, 120, 0, 510, 99999, 99999, 60},
    { 510, 67, 79, 74, 64, 99999, 315, 65, 76, 70, 99999, 99999, 99999, 99999, 99999, 99999, 70, 480, 120, 120, 55, 270, 79, 165, 99999, 99999, 180, 99999, 99999, 99999, 99999, 99999, 99999, 165, 99999, 99999, 80, 99999, 405, 77, 79, 315, 615, 65, 210, 315, 510, 0, 74, 99999, 45},
    { 99999, 99999, 99999, 99999, 99999, 90, 99999, 60, 99999, 99999, 75, 99999, 60, 99999, 71, 99999, 99999, 720, 99999, 74, 99999, 99999, 525, 240, 99999, 285, 99999, 525, 90, 99999, 99999, 99999, 435, 59, 120, 15, 69, 99999, 52, 390, 99999, 99999, 99999, 99999, 270, 99999, 99999, 74, 0, 99999, 210},
    { 75, 195, 675, 77, 99999, 67, 99999, 99999, 99999, 99999, 165, 99999, 55, 99999, 99999, 56, 330, 66, 77, 99999, 720, 285, 99999, 99999, 255, 270, 99999, 99999, 15, 99999, 99999, 99999, 360, 99999, 510, 99999, 720, 570, 99999, 555, 99999, 555, 99999, 615, 52, 99999, 99999, 99999, 99999, 0, 240},
    { 645, 30, 99999, 99999, 52, 735, 99999, 495, 99999, 330, 99999, 99999, 99999, 225, 99999, 99999, 64, 99999, 345, 77, 99999, 99999, 99999, 99999, 99999, 525, 90, 70, 510, 675, 99999, 70, 69, 270, 51, 99999, 600, 570, 99999, 52, 570, 480, 345, 99999, 99999, 105, 60, 45, 210, 240, 0}};

int kilometros1[15] = {28, 72, 95, 121, 171, 195, 244, 277, 325, 370, 411, 433, 459, 480, 499};

int camino[TAM][TAM];


// Problema 1
// Escribe aqui la implementaciÃ³n de la soluciÃ³n al problema 1
int dist = 0, dist1, dist2;


int distancia(int x, int y)
{
    return abs(x-y);
}

int checkBetween(int km, int iStart, int dist)
{
    int d1 = distancia(kilometros[iStart-1], km);
    int d2 = distancia(kilometros[iStart+1], km);
    
    if(d1<d2 && d1<dist)
    {
        return kilometros[iStart-1];
    }
    else if(d2<d1 && d2<dist)
    {
        return kilometros[iStart+1];
    }
    else
    {
        return kilometros[iStart];
    }
}

//binSeach?
int punto_cercano(int km, int iStart, int iFinish)
{
    int iSize = iFinish - iStart;
    int iMid = iSize/2;
    
    if(iSize > 1)
    {
        if(kilometros[iMid+iStart] == km)
        {
            return kilometros[iMid+iStart]; //Distancia 0
        }
        else if(kilometros[iMid+iStart] > km)
        {
            return punto_cercano(km, iStart, iMid+iStart);
        }
        else
        {
            return punto_cercano(km, iMid+iStart+1, iFinish);
        }
    }
    
    int dist1 = distancia(kilometros[iStart], km);
    int dist2 = distancia(kilometros[iFinish], km);
    
    if(dist1<dist2)
    {
        dist = checkBetween(km, iStart, dist1);
    }
    else
    {
        dist = checkBetween(km, iFinish, dist2);
    }
    
    return dist;
}


// Problema 2
// Escribe aqui la implementaciÃ³n de la soluciÃ³n al problema 2
int iUnos = 0;

int binaria(int n)
{
    if(n == 0)
    {
        return 0;
    }
    else if(n%2 == 0)
    {
        //Es par
        iUnos = binaria(n/2);
    }
    else
    {
        //Es impar
        iUnos = binaria(n/2) + 1;
    }
    return iUnos;
}



// Problema 3
// Algoritmo de Floyd
// Escribe aqui la implementaciÃ³n de la soluciÃ³n al problema 3
int iCount = 0;

int min(int a,int b)
{
    if(a<b)
        return(a);
    return(b);
}

void cuentaTrayectorias(int camino[TAM][TAM], int i, int j, int city)
{
    if(camino[i][j] == i)
    {
        return;
    }
    //Si se pasa por la ciudad dada como entrada, sumar uno y sale.
    if(camino[i][j] == city)
    {
        iCount++;
        return;
    }
    cuentaTrayectorias(camino, i, camino[i][j], city);
}

void floyd(int D[TAM][TAM],int n)
{
    //Inicializar matriz de caminos
    for(int i=0; i<TAM; i++)
    {
        for(int j=0; j<TAM; j++)
        {
            if(j==i)
            {
                camino[i][j] = 0;
            }
            else if(D[i][j] != 99999)
            {
                camino[i][j] = i;
            }
            else
            {
                camino[i][j] = -1;
            }
        }
        
    }
    
    for(int k=0; k<n; k++)
    {
        for(int i=0; i<n; i++)
        {
            for(int j=0; j<n; j++)
            {
                if(D[i][k]+D[k][j]<D[i][j])
                {
                    D[i][j] = D[i][k]+D[k][j];
                    //Asignar nodo por el que pasa con menor costo
                    camino[i][j] = camino[k][j];
                }
            }
        }
    }
}


int main()
{
    int iNum, iKm, iNodo;
    //Problema 1
    cout << "P1. En que kilometro se encuentra: ";
    cin >> iKm;
    cout << "Problema 1: " << punto_cercano(iKm, 0, 1579) << endl;

    //Problema 2
    cout << "P2. Introduzca numero entero positivo: ";
    cin >> iNum;
    cout << "Problema 2: " << binaria(iNum) << endl;

    //Problema 3
    floyd(costos, TAM);
    cout << "P3. Contar trayectorias de quÃ© nodo: ";
    cin >> iNodo;
    //Buscar por que trayectorias pasa cierto nÃºmero
    for(int i=0; i<TAM; i++)
    {
        for(int j=0; j<TAM; j++)
        {
            cuentaTrayectorias(camino, i, j, iNodo);
        }
    }
    
    cout << "Problema 3: " << iCount << endl;
}

